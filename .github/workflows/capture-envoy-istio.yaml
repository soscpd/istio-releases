name: Capture Envoy & Istio Releases

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Target branch to base the pull request on'
        required: true
        default: 'main'
        type: string
      release:
        description: 'Release identifier (e.g. envoyproxy/envoy@v1.34.7)'
        required: true
        type: string
      start_from:
        description: 'Optional START_FROM baseline (e.g. v1.34.0 or owner/repo@v1.34.0)'
        required: false
        type: string

permissions:
  contents: write

jobs:
  capture:
    runs-on: ubuntu-latest
    steps:
      - name: Check out target branch
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq curl skopeo
          sudo wget -qO /usr/local/bin/yq \
            https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Generate release metadata
        id: generate
        env:
          RELEASE: ${{ inputs.release }}
          START_FROM: ${{ inputs.start_from }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python3 .github/scripts/generate_release.py

      - name: Show summary
        if: steps.generate.outputs.changes == 'true'
        run: |
          echo "Generated ${{ steps.generate.outputs.product }} release at ${{ steps.generate.outputs.release_dir }}"

      - name: Create pull request
        if: steps.generate.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: ${{ inputs.branch }}
          branch: ${{ steps.generate.outputs.pr_branch }}
          commit-message: ${{ steps.generate.outputs.commit_message }}
          title: ${{ steps.generate.outputs.pr_title }}
          body: |
            Automated release metadata for `${{ steps.generate.outputs.release_tag }}`.
          add-paths: |
            ${{ steps.generate.outputs.release_dir }}
          signoff: false
          delete-branch: true

      - name: No changes detected
        if: steps.generate.outputs.changes != 'true'
        run: echo "No new release artifacts were generated."